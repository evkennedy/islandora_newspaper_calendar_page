<?php
/**
 * @file
 * Hooks and callbacks for this module.
 */
function islandora_newspaper_calendar_page_menu() {
  $items = array();

  $items['islandora/object/%islandora_object/newspaper_calendar'] = array(
    'weight' => -3,
    'title' => t('Calendar'),
    'page callback' => 'islandora_newspaper_calendar_page_view',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_newspaper_calendar_page_access',
    'access arguments' => array(2),
  );

  return $items;
}

/**
 * Determines whether or not to show this modules tab.
 *
 * @global object $user
 * @param FedoraObject $fedora_object
 * @return boolean
 */
function islandora_newspaper_calendar_page_access($fedora_object) {
  if (!isset($fedora_object)) {
    return FALSE;
  }

  $models = $fedora_object->models;

  // Show tab if MODS datastream exists and has newspaperCModel relationship.
  if (isset($fedora_object['MODS']) AND in_array("islandora:newspaperCModel", $models, TRUE)) {
    return TRUE;
  }

  return FALSE;
}

/**
 * The newspaper calendar page view.
 *
 * @param FedoraObject $object
 * @return string
 */
function islandora_newspaper_calendar_page_view($object) {
  $output = drupal_get_form('islandora_newspaper_calendar_page_form', $object);
  return drupal_render($output);
}

/**
 * The newspaper calendar page view.
 *
 * @param array $form
 * @param array $form_state
 * @param FedoraObject $object
 * @return array $form
 */
function islandora_newspaper_calendar_page_form($form, &$form_state, $object) {

  global $base_url;
  module_load_include('inc', 'islandora_newspaper', 'includes/utilities');
  drupal_set_title("Newspaper Issues Calendar");

  $all_issues = islandora_newspaper_get_issues($object);
  $all_grouped_issues = islandora_newspaper_group_issues($all_issues);

  if($all_issues) {
    foreach($all_grouped_issues as $year => $month_data) {
      // Default to earliest newspaper issue year found.
      if(!isset($form_state['selected_year']))
        $form_state['selected_year'] = $form_state['values']['issue_years'] = $year;
      $available_years[$year] = $year;
    }

    $form_state['available_years'] = $available_years;
    $form = select_issue_year($form, $form_state);



    $issues_solr = islandora_newspaper_get_solr_year_issues($object, $form_state['values']['issue_years']);

    foreach($issues_solr['response']['docs'] as $key => $solr_data) {

      // Add 5 hours to solr dateIssued result since dates close to different years (e.g. Jan 1) can be cast incorrectly
      $solr_date = date("Y-m-d H:i:s", strtotime($solr_data['RELS_EXT_dateIssued_literal_ms'][0] . '+ 5 hours', $now = time()));
      $solr_year = date("Y", strtotime($solr_date, $now = time()));
      $solr_month = date("m", strtotime($solr_date, $now = time()));
      $solr_day = date("d", strtotime($solr_date, $now = time()));
      $newspaper_issue_dates[$solr_data['PID']] = $solr_year . "-" . $solr_month . "-" . $solr_day;
    }

    foreach($newspaper_issue_dates as $pid => $issue_date) {

      $issue_year = date('Y', strtotime($issue_date));

      // quick fix for query bringing back more than 1 year...  clean up if query is fixed
      if(!isset($first_year))
        $first_year = date('Y', strtotime($issue_date));

      if($issue_year == $first_year) {

        //$issue_year = date('Y', strtotime($issue_date));
        $issue_month = date('n', strtotime($issue_date));
        $issue_day = date('j', strtotime($issue_date));
        $issue_pids[$issue_year][$issue_month][$issue_day] = $pid;
      }
    }





    $form['new_cal']['ajax-wrapper']['outter-block'] = array(
      '#markup' =>'<div class = "year-cal-wrapper"><div class = "year-cal-row">',
      '#prefix' => '<div id = "ajax-wrapper">',
      //'#suffix' => '</div>'
    );

    $year = $first_year;

    for($ctr = 1; $ctr <= 12; $ctr++) {

      $month = $ctr;

      // Generate first day of the month.
      $first_day = mktime(0,0,0,$month, 1, $year) ;

      // Get month name.
      $title = date('F', $first_day) ;

      // Day of the week the first day of the month falls on.
      $day_of_week = date('D', $first_day) ;

      // Blank days occurring before first day.
      switch($day_of_week){
        case "Sun": $blank = 0; break;
        case "Mon": $blank = 1; break;
        case "Tue": $blank = 2; break;
        case "Wed": $blank = 3; break;
        case "Thu": $blank = 4; break;
        case "Fri": $blank = 5; break;
        case "Sat": $blank = 6; break;
      }

      $days_in_month = cal_days_in_month(0, $month, $year) ;

      // Build CSS table.
      $new_cal = '<div class = "cal-block-outter">
                    <div class = "cal-block">
                      <div class = "cal-row">
                        <div class = "cal-row-block">
                          <div class = "cal-title-block">'
                            . $title . " " . $year . '
                          </div>
                        </div>
                      </div>
                      <div class = "cal-row">
                        <div class = "cal-row-block">
                          <div class = "day-head-block">S</div>
                          <div class = "day-head-block">M</div>
                          <div class = "day-head-block">T</div>
                          <div class = "day-head-block">W</div>
                          <div class = "day-head-block">T</div>
                          <div class = "day-head-block">F</div>
                          <div class = "day-head-block">S</div>
                        </div>
                      </div>';

      $new_cal .= '<div class = "cal-row"><div class = "cal-row-block">';

      $day_count = 1;
      while ( $blank > 0 ) {
        $new_cal .= '<div class = "blank-day-block">&nbsp;</div>';
        $blank = $blank-1;
        $day_count++;
      }

      $day_num = 1;
      while ( $day_num <= $days_in_month ) {
        if(array_key_exists($month, $issue_pids[$year]))
          if(array_key_exists($day_num, $issue_pids[$year][$month]))
            $new_cal .= '<div class = "day-issue-block"><a href=' . $base_url . '/islandora/object/'
              . $issue_pids[$year][$month][$day_num] . '>' . $day_num . '</a></div>';
          else
            $new_cal .= '<div class = "day-no-issue-block">' .  $day_num . '</div>';
        else
          $new_cal .= '<div class = "day-no-issue-block">' .  $day_num . '</div>';

        $day_count++;

        // Start new row every week.
        if ($day_count > 7 AND $day_num != $days_in_month) {
          $new_cal .= '</div></div><div class = "cal-row"><div class = "cal-row-block">';
          $day_count = 1;
        }

        $day_num++;
      }

      // Add remaining blank days.
      while ( $day_count >1 && $day_count <=7 ) {
        $new_cal .= '<div class = "blank-day-block">&nbsp;</div>';
        $day_count++;
      }

      if($ctr == 4 OR $ctr == 8)
        $new_cal .= '</div></div></div></div></div><div class = "year-cal-row">';
      elseif($ctr == 12)
        $new_cal .= '</div></div></div></div></div>';
      else
        $new_cal .= '</div></div></div></div>';

      $form['new_cal']['ajax-wrapper']['calendar' . $ctr] = array('#markup' => $new_cal);
    }

    $form['new_cal']['ajax-wrapper']['end-outter-block'] = array('#markup' => '</div></div>');




















  }
  else {
    $form['no_issues'] = array('#markup' => "Issues for this newspaper are not yet available.");
  }




  return $form;
}

function select_issue_year($form, &$form_state) {

  $form['container'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('container-inline'),
    ),
  );

  $form['container']['issue_years'] = array(
    '#type' => 'select',
    '#title' => t('Year'),
    '#options' => $form_state['available_years'],
    '#default_value' => $form_state['selected_year'],
    '#prefix' => '<div class = "cal-controls">',
    //'#suffix' => '</div>',
    '#ajax' => array(
      'callback' => 'islandora_newspaper_calendar_page_ajax_reload',
      'wrapper' => 'ajax-wrapper',
      'method' => 'replace',
      'effect' => 'fade'
    ),
  );

  // SUBMIT BUTTON
  //$form['container']['calendar_button'] = array(
  //  '#type' => 'button',
  //  '#executes_subit_callback' => FALSE,
  //  '#value' => t('Select'),
    /*'#validate' => array('get_issues'),*/
  //  '#suffix' => '</div>'
  //);

  return $form;
}

function islandora_newspaper_calendar_page_ajax_reload($form) {

  return $form['new_cal']['ajax-wrapper'];
}

/**
 * Gets all issues from the given year that the given newspaper owns.
 *
 * The results are ordered by their RELS-EXT dateIssued property.
 * Older to newer.
 *
 * @param AbstractObject $object
 *   The datastream containing MODS.
 *
 * @param string $issue_year
 *   Year of issues to extract.
 *
 * @return array
 *   An associative array in the form of:
 *   - pid: The unique persistent identifier for the issue.
 *     - label: A descriptive label for the issue.
 *     - sequence: The sequence number of the issue, starts at 1.
 *     - issued: A DateTime object repersenting the date the issue was released.
 */
function islandora_newspaper_get_solr_year_issues(AbstractObject $object, $issue_year) {
  $solr_handler = variable_get('islandora_solr_request_handler', FALSE);
  $path_parts = parse_url(variable_get('islandora_solr_url', 'localhost:8080/solr'));
  $solr = new Apache_Solr_Service($path_parts['host'], $path_parts['port'], $path_parts['path'] . '/');
  $solr->setCreateDocuments(0);

  $parent = $solr->escape($object->id);
  $cmodel = $solr->escape('islandora:newspaperIssueCModel');
  $solr_query = "content_model_ms:$cmodel AND parent_pid:$parent AND RELS_EXT_dateIssued_literal_ms:$issue_year*";
  $solr_params = array();
  $solr_params['fl'][] = 'PID, RELS_EXT_dateIssued_literal_ms, mods_originInfo_dateIssued_dt';
  $solr_params['sort'] = array('mods_originInfo_dateIssued_dt asc');

  if ($solr_handler) {
    $solr_params['qt'] = $solr_handler;
  }
  $namespaces_enforced = variable_get('islandora_namespace_restriction_enforced', FALSE);
  if ($namespaces_enforced) {
    $namespace_list = trim(variable_get('islandora_pids_allowed', ''));
    if ($namespace_list) {
      $namespaces = preg_split('/[,|\s]/', $namespace_list);
      $namespace_array = array();
      foreach (array_filter($namespaces) as $namespace) {
        $namespace_array[] = 'PID:' . Apache_Solr_Service::escape($namespace) . '*';
      }
      $solr_params['fq'][] = implode(' OR ', $namespace_array);
    }
  }

  try {
    $method = 'GET';
    $results = $solr->search($solr_query, 0, '100000', $solr_params, $method);
  }
  catch (Exception $e) {
    watchdog('islandora_solutionpack_newspapers', 'Error getting solr results %e',
      array('%e' => $e->getMessage()));
  }
  $solr_results = NULL;
  if (!empty($results)) {
    $solr_results = json_decode($results->getRawResponse(), TRUE);
  }

  return $solr_results;
}